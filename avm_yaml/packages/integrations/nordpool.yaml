###############################################################################
#   @author       :   ArveVM 
#   @date         :   21.march.2022
#   @integration  :   HACS; Nordpool
#   @description  :   get today/tomorrow's prices on  
#   @basic concept: 
#      Integration get new prices at mid-day for the next day
#      load price pr hour of the day into entities in a sensor 
#
#   AVM: integration added via HACS; 
#      config in /config/custom_components/nordpool   and HACS-intgrations
#   some config in HACS-intgration ?
#
#   Again, tip and shitload of guiding from mrRR
#
#   HACS-repository:    https://github.com/custom-components/nordpool
#   Nordpool glossary:  https://www.energiforetagen.se/globalassets/energiforetagen/det-erbjuder-vi/kurser-och-konferenser/krisutbildningar/nord-pool-spot-glossary.pdf
#
###############################################################################


# Additional config, see documentation for references:
    # This option allows the usage of a template to add a tariff.
    # now() always refers start of the hour of that price.
    # this way we can calculate the correct costs add that to graphs etc.
    # The price result of the additional_costs template expects this additional cost to be in kWh and not cents as a float
    # default {{0.0|float}}

input_number:
#  nordpool_hi:
#    name: Nordpool_1
#    initial: 15
#    min: 0
#    max: 100
#    step: 1
#  nordpool_input_low:
#    name: "Nordpool input low"
#    initial: 5
#    min: 0
#    max: 100
#    step: 0.01

    # i tillegg til spotpris så kjem følgande tillegg (summer inkl mva) 
    # Wattn 1,25 øre, enova 1,25 øre, fastbeløp (2500,-pr år/26000prår=9,62øre,   forbruksavgift 11,14 øre, nettleie 23,75 øre
  nordpool_additional_cost:
    name: Nordpool_add
    initial: 0.4701    # NB; her er det kr som gjelder,, konverteres til øre i nordpool-sensoren!
    min: 0
    max: 100
    step: 0.0001


    
sensor:
  - platform: nordpool

    # skudd i blinde,,,,,
    friendly_name: nordpool

    # Should the prices include vat? Default True
    VAT: True

    # What currency the api fetches the prices in
    # this is only need if you want a sensor in a non local currecy
    # currency: "EUR"

    # Helper so you can set your "low" price
    # low_price = hour_price < average * low_price_cutoff
    #low_price_cutoff: 0.95
    low_price_cutoff: 0.95

    # What power regions your are interested in.
    # Possible values: "DK1", "DK2", "FI", "LT", "LV", "Oslo", "Kr.sand", "Bergen", "Molde", "Tr.heim", "Tromsø", "SE1", "SE2", "SE3","SE4", "SYS", "EE"
    region: "Molde"

    # How many decimals to use in the display of the price
    precision: 2

    # What the price should be displayed in default
    # Possible values: MWh, kWh and Wh
    # default: kWh
    price_type: kWh

    # This option allows the usage of a template to add a tariff.
    # now() always refers start of the hour of that price.
    # this way we can calculate the correct costs add that to graphs etc.
    # The price result of the additional_costs template expects this additional cost to be in kWh and not cents as a float
    # default {{0.0|float}}
    additional_costs: "{{(states('input_number.nordpool_additional_cost') | float (0))}}"
    
    # AVM; found this on FB-group,, not documented in github :)
    price_in_cents: true


# Additional stuff:

template:
  sensor:
    - name: nordpool_current_price
      unique_id: nordpool_current_price
      state:  "{{ state_attr('sensor.nordpool_kwh_molde_nok_2_095_025', 'current_price') }}"
      unit_of_measurement: Øre/kWh
    - name: nordpool_average_price
      unique_id: nordpool_average_price
      state:  "{{ state_attr('sensor.nordpool_kwh_molde_nok_2_095_025', 'average') }}"
      unit_of_measurement: Øre/kWh
    - name: nordpool_price_low
      unique_id: nordpool_price_low
      state:  "{{ state_attr('sensor.nordpool_kwh_molde_nok_2_095_025', 'low price') }}"
#      unit_of_measurement: NOK/kWh
#  - name: nordpool_price_high
#    unique_id: nordpool_price_high
#    state: "{{ (states('sensor.nordpool_kwh_molde_nok_2_10_025') | float) >= (state_attr('sensor.nordpool_kwh_molde_nok_2_10_025', 'average') | float * (1 + states('input_number.nordpool_over_avg_acceptance') | float /100)) }}"
#    unit_of_measurement: NOK/kWh